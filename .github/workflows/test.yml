name: Tests
on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/*'
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/*'
jobs:
  copywrite:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout Repo
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Install copywrite
        uses: hashicorp/setup-copywrite@32638da2d4e81d56a0764aa1547882fc4d209636 # v1.1.3
      - name: Validate Header Compliance
        run: copywrite headers --plan

  # resolve-versions allows us to show resolved Go versions in job titles
  # for added clarity and quick orientation in a long list of past jobs
  resolve-versions:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      -
        name: Resolve old stable version
        id: oldstable
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: oldstable
      -
        name: Resolve stable version
        id: stable
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: stable
    outputs:
      oldstable: ${{ steps.oldstable.outputs.go-version }}
      stable: ${{ steps.stable.outputs.go-version }}

  build:
    name: build (go ${{ matrix.go_version }})
    needs:
      - resolve-versions
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        go_version:
          - ${{ needs.resolve-versions.outputs.oldstable }}
          - ${{ needs.resolve-versions.outputs.stable }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
      with:
        go-version: ${{ matrix.go_version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

    - name: Go fmt
      run: |
        # exit 1 if any files need go fmt
        test -z $(gofmt -s -l .)

    - name: Go vet
      run: |
        go vet ./...

    - name: Build
      run: |
        go build -v .

  test:
    name: tests (${{ matrix.os }}, go ${{ matrix.go_version }})
    needs:
      - build
      - resolve-versions
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        go_version:
          - ${{ needs.resolve-versions.outputs.oldstable }}
          - ${{ needs.resolve-versions.outputs.stable }}
    steps:

    - name: Set up Go
      uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
      with:
        go-version: ${{ matrix.go_version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

    - name: Unit tests
      timeout-minutes: 5
      run: |
        go test -v -race ./...

    - name: E2E tests
      timeout-minutes: 70
      env:
        E2E_TESTING: 1
      run: |
        go test -timeout=60m -v ./...
